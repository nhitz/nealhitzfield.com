---
interface Props {
  title: string;
  image?: string;
}

const {
  title = "Home",
  image = "https://res.cloudinary.com/dp3ppkxo5/image/upload/v1693776174/spotify-astro/playlist_2_f9ymlx.jpg",
} = Astro.props;
import { ViewTransitions } from "astro:transitions";
import "./layout.css";
import SideMenu from "../components/Side/SideMenu.astro";
declare global {
  interface Document {
    startViewTransition?: () => void;
  }
}
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content="Clone of Spotify with Astro View Transitions integration for fluid navigation"
    />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title} | Neal's Website</title>
    <meta property="og:image" content={image} />
    <meta name="twitter:image" content={image} />
    <ViewTransitions fallback="animate" />
    <style>
      #toggleMenu {
        background-color: #4CAF50; /* Green */
        border: none;
        color: white;
        padding: 5px 10px; /* Smaller size */
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 14px; /* Smaller text */
        margin: 4px 2px;
        cursor: pointer;
        border-radius: 4px;
        position: absolute; /* Positioning */
        top: 21px; /* Adjust this value to align with the "Home" row */
        right: 200px; /* Position from the right */
        z-index: 1000; /* Ensure it's on top */
      }
    </style>
  </head>
  <body class="dark">
    <div class="relative h-screen p-2 gap-2 flex items-stretch">
      <div
        id="sideMenu"
        class="w-[350px] flex-col hidden lg:flex overflow-y-auto"
      >
        <SideMenu />
      </div>
      <button id="toggleMenu">Toggle Menu</button>
      <div class="rounded-lg bg-zinc-900 flex-1 mx-auto overflow-y-auto">
        <slot />
      </div>
    </div>
    <div
      id="not-support"
      class="fixed hidden bg-red-700 bottom-0 inset-x-0 rounded-t-md text-center py-2 lg:py-4 z-50 font-semibold"
    >
      It seems your browser does not support view transitions yet :( try it
      using chrome or edge <a
        class="underline"
        href="https://github.com/igorm84/spotify-astro-transitions"
        >(see docs here)</a
      >
    </div>
    <script is:inline defer>
      function setContainerColor(dataColor) {
        const playlistContainer = document.getElementById("playlist-container");
        const currentColor = playlistContainer?.getAttribute("data-color");
        if (dataColor && dataColor !== currentColor) {
          playlistContainer?.style.setProperty("--context-color", dataColor);
          playlistContainer?.setAttribute("data-color", dataColor);
        }
      }

      window.coloradTimeout = null;
      for (const playlist of document.querySelectorAll(".playlist-item")) {
        playlist.addEventListener("mouseover", () =>
          onMouseOverColorad(playlist)
        );
        playlist.addEventListener("mouseout", onMouseOutColorad);
        playlist.addEventListener("focus", () => onMouseFocusColorad(playlist));
        playlist.addEventListener("blur", onMouseOutColorad);
      }

      function onMouseFocusColorad(el) {
        if (el) {
          const dataColor = el.getAttribute("data-color");
          if (!dataColor) return;
          setContainerColor(dataColor);
        }
      }
      function onMouseOverColorad(el) {
        if (el) {
          const dataColor = el.getAttribute("data-color");
          if (!dataColor) return;
          window.coloradTimeout = setTimeout(
            () => setContainerColor(dataColor),
            200
          );
        }
      }
      function onMouseOutColorad() {
        if (window.coloradTimeout) {
          clearTimeout(window.coloradTimeout);
          window.coloradTimeout = null;
        }
      }
    </script>
    <script>
      if (!document.startViewTransition) {
        const notSupportElement = document.getElementById("not-support");
        if (notSupportElement) {
          notSupportElement.classList.remove("hidden");
        }
      }
      document.addEventListener("astro:page-load", () => {
        for (const el of document.querySelectorAll(".el-to-fade")) {
          el.classList.remove("scale-90");
        }
        const toggleMenu = document.getElementById("toggleMenu");
        if (toggleMenu) {
          toggleMenu.addEventListener("click", function () {
            const sideMenu = document.getElementById("sideMenu");
            if (sideMenu) {
              sideMenu.classList.toggle("collapsed");
            }
          });
        }
      });
    </script>
  </body>
</html>

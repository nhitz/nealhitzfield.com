---
import {type CollectionEntry, getCollection} from "astro:content";
import Layout from "../../layouts/Layout.astro";
import FormattedDate from "../../components/Project/FormattedDate.astro";
// import {readingTime} from "../../lib/utils";
import BackToPrevious from "../../components/Project/BackToPrevious.astro";
// import Link from "@components/Link.astro";
import TableOfContents from "../../components/Project/TableOfContents.astro";

export async function getStaticPaths() {
    const projects = (await getCollection("projects"))
        .filter((post) => !post.data.draft)
        .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
    return projects.map((project) => ({
        params: {slug: project.slug},
        props: project,
    }));
}
type Props = CollectionEntry<"projects">;

const project = Astro.props;
const {Content, headings} = await project.render();
---

<Layout title={project.data.title}>
    <div class="mx-auto max-w-screen-sm px-3">
        <div class="animate">
            <BackToPrevious href="/projects">Back to projects</BackToPrevious>
        </div>
        <div class="animate my-10 space-y-1">
            <div class="flex items-center gap-1.5">
                <div class="font-base text-sm">
                    <FormattedDate date={project.data.date}/>
                </div>
                &bull;
                <!--<div class="font-base text-sm">-->
                <!--    {readingTime(project.body)}-->
                <!--</div>-->
            </div>
            <h1 class="text-3xl font-semibold text-black dark:text-white">
                {project.data.title}
            </h1>
            {
                (project.data.demoURL || project.data.repoURL) && (
                            <nav class="flex gap-1">
                                {project.data.demoURL && (
                                        <a href={project.data.demoURL} target="_blank" rel="noopener noreferrer">
                                            demo
                                        </a>
                                )}
                                {project.data.demoURL && project.data.repoURL && <span>/</span>}
                                {project.data.repoURL && (
                                        <a href={project.data.repoURL} target="_blank" rel="noopener noreferrer">
                                            repo
                                        </a>
                                )}
                            </nav>
                )
            }
        </div>
        <TableOfContents headings={headings}/>
        <article class="animate">
            <Content/>
        </article>
    </div>
</Layout>
